<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>// add these to your XXX-Prefix.pch
// for DEBUG goodness

// DLog will output like NSLog only when the DEBUG variable is set.
// Alog will throw Assertions in DEBUG and NSLog otherwise
#ifdef DEBUG
#define DLog(...) NSLog(@"%s %@", __PRETTY_FUNCTION__, [NSString stringWithFormat:__VA_ARGS__])
#define ALog(...) [[NSAssertionHandler currentHandler] \
handleFailureInFunction:[NSString stringWithCString:__PRETTY_FUNCTION__ \
encoding:NSUTF8StringEncoding] \
file:[NSString stringWithCString:__FILE__ encoding:NSUTF8StringEncoding] \
lineNumber:__LINE__ description:__VA_ARGS__]
#else
#define DLog(...) do { } while (0)
#ifndef NS_BLOCK_ASSERTIONS
#define NS_BLOCK_ASSERTIONS
#endif
#define ALog(...) NSLog(@"%s %@", __PRETTY_FUNCTION__, [NSString stringWithFormat:__VA_ARGS__])
#endif

// ULog will show a UIAlertView only when the DEBUG variable is set.
#ifdef DEBUG
#define ULog(fmt, ...)  { \
UIAlertView *alert = [[UIAlertView alloc] initWithTitle:[NSString stringWithFormat:@"%s\n [Line %d] ", __PRETTY_FUNCTION__, __LINE__] \
message:[NSString stringWithFormat:fmt, ##__VA_ARGS__]  \
delegate:nil \
cancelButtonTitle:@"Ok" \
otherButtonTitles:nil]; \
[alert show]; }
#else
#define ULog(...)
#endif

// ZAssert functions like a normal NSAssert in DEBUG mode, in prod it will only log errors
#define ZAssert(condition, ...) do { if (!(condition)) { ALog(__VA_ARGS__); }} while(0)</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>2B0FF8ED-D869-48F3-B766-F20C943B18B1</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetSummary</key>
	<string>Dlog, ALog, Ulog and ZAssert Macros</string>
	<key>IDECodeSnippetTitle</key>
	<string>XXX-Prefix.pch Debug Macros</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
